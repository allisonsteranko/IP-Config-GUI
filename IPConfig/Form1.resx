<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>